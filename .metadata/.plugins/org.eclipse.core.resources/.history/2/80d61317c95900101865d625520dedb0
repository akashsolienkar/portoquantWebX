package com.quant.portoquant.domain.calculations.registry;

import com.quant.portoquant.domain.calculations.returnestimations.ExpectedReturnCalculator;

import com.quant.portoquant.domain.analytical.ExpectedReturnModel;
import com.quant.portoquant.domain.analytical.VolatilityModel;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
@RequiredArgsConstructor
public class ModelCalculatorRegistry {

    private final List<ExpectedReturnCalculator> returnCalculators;
    private final List<VolatilityCalculator> volatilityCalculators;

    public ExpectedReturnModel calculateExpectedReturn(Asset asset) {
        return returnCalculators.stream()
                .filter(calculator -> supports(calculator, asset))
                .findFirst()
                .orElseThrow(() -> new RuntimeException("No expected return calculator found for asset."))
                .calculate(asset);
    }

    public VolatilityModel calculateVolatility(Asset asset) {
        return volatilityCalculators.stream()
                .filter(calculator -> supports(calculator, asset))
                .findFirst()
                .orElseThrow(() -> new RuntimeException("No volatility calculator found for asset."))
                .calculate(asset);
    }

    private boolean supports(Object calculator, Asset asset) {
        // Simplified logic â€” extend this to filter based on asset type if needed
        return true;
    }
}
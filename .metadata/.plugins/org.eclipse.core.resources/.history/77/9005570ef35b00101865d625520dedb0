package com.quant.portoquant.application.service;

import java.util.List;
import java.util.UUID;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.quant.portoquant.api.dto.PortfolioRequest;
import com.quant.portoquant.api.dto.PortfolioResponse;
import com.quant.portoquant.api.mapper.PortfolioMapper;
import com.quant.portoquant.domain.model.Portfolio;
import com.quant.portoquant.domain.model.User;
import com.quant.portoquant.infrastructure.repository.PortfolioRepository;
import com.quant.portoquant.infrastructure.repository.UserRepository;

import jakarta.persistence.EntityNotFoundException;
import lombok.RequiredArgsConstructor;

@Service
@RequiredArgsConstructor
public interface PortfolioService {
	
        
   public PortfolioResponse createPortfolio(PortfolioRequest request);
  
   public List<PortfolioResponse> getAllPortfoliosForUser(UUID userId)
    {
	   return portfolioRepository.findAllByOwnerId(userId).stream()
               .map(request->PortfolioMapper.toResponse(request))
               .collect(Collectors.toList());

    }

    public PortfolioResponse getPortfolioById(UUID id)
    {
    	return portfolioRepository.findById(id)
                .map(PortfolioMapper::toResponse)
                .orElseThrow(() -> new EntityNotFoundException("Portfolio not found"));   
    	}

    public PortfolioResponse updatePortfolio(UUID id, PortfolioRequest request)
    {
    	Portfolio portfolio = portfolioRepository.findById(id)
                .orElseThrow(() -> new EntityNotFoundException("Portfolio not found"));
        portfolio.setName(request.getName());
        portfolio.setTotalValuation(request.getTotalValuation());
        return PortfolioMapper.toResponse(portfolioRepository.save(portfolio));
    }

    public void deletePortfolio(UUID id)
    {
    	 portfolioRepository.deleteById(id);
    }
}

package com.quant.portoquant.domain.model;

import com.quant.portoquant.domain.analytical.ExpectedReturnModel;
import com.quant.portoquant.domain.analytical.VolatilityModel;
import com.quant.portoquant.domain.model.enums.AssetType;
import jakarta.persistence.*;
import lombok.*;

import java.math.BigDecimal;
import java.util.UUID;

@Entity
@Table(name = "assets")
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "asset_subtype")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public abstract class Asset {

    @Id
    @GeneratedValue(strategy = GenerationType.AUTO)
    private UUID id;

    private String name;

    @Enumerated(EnumType.STRING)
    private AssetType type;

    private BigDecimal allocation;

    private String ticker;
    
    int price;

    @Transient
    private ExpectedReturnModel expectedReturnModel;

    @Transient
    private VolatilityModel volatilityModel;
    
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "portfolio_id")
    private Portfolio portfolio;
    
    public abstract double calculateExpectedReturn();

    public abstract double calculateVolatility();

}

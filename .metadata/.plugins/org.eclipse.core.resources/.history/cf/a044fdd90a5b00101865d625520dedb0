package com.quant.portoquant.domain.calculations.registry;

import com.quant.portoquant.domain.calculations.returnestimations.ExpectedReturnCalculator;
import com.quant.portoquant.domain.calculations.volatilityestimations.VolatilityCalculator;
import com.quant.portoquant.domain.model.Asset;
import com.quant.portoquant.domain.model.enums.AssetType;
import com.quant.portoquant.domain.analytical.ExpectedReturnModel;
import com.quant.portoquant.domain.analytical.VolatilityModel;

import lombok.RequiredArgsConstructor;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
@RequiredArgsConstructor
public class ModelCalculatorRegistry {

    private final List<ExpectedReturnCalculator> returnCalculators;
    private final List<VolatilityCalculator> volatilityCalculators;

    public ExpectedReturnModel calculateExpectedReturn(Asset asset) {
        return returnCalculators.stream()
                .filter(calculator -> supports(calculator, asset))
                .findFirst()
                .orElseThrow(() -> new RuntimeException("No expected return calculator found for asset."))
                .calculate(asset);
    }

    public VolatilityModel calculateVolatility(Asset asset) {
        return volatilityCalculators.stream()
                .filter(calculator -> supports(calculator, asset))
                .findFirst()
                .orElseThrow(() -> new RuntimeException("No volatility calculator found for asset."))
                .calculate(asset);
    }

    private boolean supports(Object calculator, Asset asset) {
        // Simplified logic â€” extend this to filter based on asset type if needed
//    	if(asset.getType()==AssetType.STOCK && instanceof )
//    		return true;
//    	else if(asset.getType()==AssetType.MUTUAL_FUND)
//            return true;
//    	else if(asset.getType()==AssetType.REAL_ESTATE)
//            return true;
//    	else if(asset.getType()==AssetType.CASH)
//            return true;
//    	else if(asset.getType()==AssetType.BOND)
//            return true;
//    	else if(asset.getType()==AssetType.COMMODITY)
//            return true;
//    	else if(asset.getType()==AssetType.CRYPTO)
//            return true;
//    	else
//    	return false;
    	return true;
    }
     
}
package com.quant.portoquant.infrastructure.reports.generator;

import com.quant.portoquant.infrastructure.reports.models.PortfolioReportData;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.thymeleaf.context.Context;
import org.thymeleaf.spring6.SpringTemplateEngine;

import com.openhtmltopdf.pdfboxout.PdfRendererBuilder;

import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

@Component
public class PdfReportGenerator {

    @Autowired
    private SpringTemplateEngine templateEngine;

    @Autowired
    private ChartRenderer chartRenderer;
    
    public byte[] generateReport(PortfolioReportData data) {
        // Step 1: Render Thymeleaf HTML
    	String pieChartBase64 = chartRenderer.generatePieChartBase64(data.getPieChartData(),"Asset Distribution");
       
    	
    	
    	Context context = new Context();
        context.setVariable("report", data);
        context.setVariable("pieChart", pieChartBase64);
        String renderedHtml = templateEngine.process("portfolio-report", context); // resources/templates/portfolio-report.html
        System.out.println(renderedHtml);
        //        try {
//			Files.writeString(Paths.get("report.html"), renderedHtml);
//		} catch (IOException e) {
//			// TODO Auto-generated catch block
//			e.printStackTrace();
//		}
        // Step 2: Convert HTML to PDF
        try (ByteArrayOutputStream outputStream = new ByteArrayOutputStream()) {
            PdfRendererBuilder builder = new PdfRendererBuilder();
            builder.withHtmlContent(renderedHtml, null);
            builder.toStream(outputStream);
            builder.run();
            return outputStream.toByteArray();
        } catch (Exception e) {
            throw new RuntimeException("Failed to generate PDF report", e);
        }
    }
}
